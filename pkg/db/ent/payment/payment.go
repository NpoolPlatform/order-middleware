// Code generated by ent, DO NOT EDIT.

package payment

import (
	"entgo.io/ent"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the payment type in the database.
	Label = "payment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldGoodID holds the string denoting the good_id field in the database.
	FieldGoodID = "good_id"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldAccountID holds the string denoting the account_id field in the database.
	FieldAccountID = "account_id"
	// FieldStartAmount holds the string denoting the start_amount field in the database.
	FieldStartAmount = "start_amount"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldPayWithBalanceAmount holds the string denoting the pay_with_balance_amount field in the database.
	FieldPayWithBalanceAmount = "pay_with_balance_amount"
	// FieldFinishAmount holds the string denoting the finish_amount field in the database.
	FieldFinishAmount = "finish_amount"
	// FieldCoinUsdCurrency holds the string denoting the coin_usd_currency field in the database.
	FieldCoinUsdCurrency = "coin_usd_currency"
	// FieldLocalCoinUsdCurrency holds the string denoting the local_coin_usd_currency field in the database.
	FieldLocalCoinUsdCurrency = "local_coin_usd_currency"
	// FieldLiveCoinUsdCurrency holds the string denoting the live_coin_usd_currency field in the database.
	FieldLiveCoinUsdCurrency = "live_coin_usd_currency"
	// FieldCoinInfoID holds the string denoting the coin_info_id field in the database.
	FieldCoinInfoID = "coin_info_id"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldChainTransactionID holds the string denoting the chain_transaction_id field in the database.
	FieldChainTransactionID = "chain_transaction_id"
	// FieldUserSetPaid holds the string denoting the user_set_paid field in the database.
	FieldUserSetPaid = "user_set_paid"
	// FieldUserSetCanceled holds the string denoting the user_set_canceled field in the database.
	FieldUserSetCanceled = "user_set_canceled"
	// FieldFakePayment holds the string denoting the fake_payment field in the database.
	FieldFakePayment = "fake_payment"
	// Table holds the table name of the payment in the database.
	Table = "payments"
)

// Columns holds all SQL columns for payment fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldAppID,
	FieldUserID,
	FieldGoodID,
	FieldOrderID,
	FieldAccountID,
	FieldStartAmount,
	FieldAmount,
	FieldPayWithBalanceAmount,
	FieldFinishAmount,
	FieldCoinUsdCurrency,
	FieldLocalCoinUsdCurrency,
	FieldLiveCoinUsdCurrency,
	FieldCoinInfoID,
	FieldState,
	FieldChainTransactionID,
	FieldUserSetPaid,
	FieldUserSetCanceled,
	FieldFakePayment,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/order-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultStartAmount holds the default value on creation for the "start_amount" field.
	DefaultStartAmount decimal.Decimal
	// DefaultAmount holds the default value on creation for the "amount" field.
	DefaultAmount decimal.Decimal
	// DefaultPayWithBalanceAmount holds the default value on creation for the "pay_with_balance_amount" field.
	DefaultPayWithBalanceAmount decimal.Decimal
	// DefaultFinishAmount holds the default value on creation for the "finish_amount" field.
	DefaultFinishAmount decimal.Decimal
	// DefaultCoinUsdCurrency holds the default value on creation for the "coin_usd_currency" field.
	DefaultCoinUsdCurrency decimal.Decimal
	// DefaultLocalCoinUsdCurrency holds the default value on creation for the "local_coin_usd_currency" field.
	DefaultLocalCoinUsdCurrency decimal.Decimal
	// DefaultLiveCoinUsdCurrency holds the default value on creation for the "live_coin_usd_currency" field.
	DefaultLiveCoinUsdCurrency decimal.Decimal
	// DefaultState holds the default value on creation for the "state" field.
	DefaultState string
	// DefaultChainTransactionID holds the default value on creation for the "chain_transaction_id" field.
	DefaultChainTransactionID string
	// DefaultUserSetPaid holds the default value on creation for the "user_set_paid" field.
	DefaultUserSetPaid bool
	// DefaultUserSetCanceled holds the default value on creation for the "user_set_canceled" field.
	DefaultUserSetCanceled bool
	// DefaultFakePayment holds the default value on creation for the "fake_payment" field.
	DefaultFakePayment bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
