// Code generated by ent, DO NOT EDIT.

package orderpaymenttransfer

import (
	"entgo.io/ent"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the orderpaymenttransfer type in the database.
	Label = "order_payment_transfer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldCoinTypeID holds the string denoting the coin_type_id field in the database.
	FieldCoinTypeID = "coin_type_id"
	// FieldStartAmount holds the string denoting the start_amount field in the database.
	FieldStartAmount = "start_amount"
	// FieldPaymentTransactionID holds the string denoting the payment_transaction_id field in the database.
	FieldPaymentTransactionID = "payment_transaction_id"
	// FieldPaymentFinishAmount holds the string denoting the payment_finish_amount field in the database.
	FieldPaymentFinishAmount = "payment_finish_amount"
	// Table holds the table name of the orderpaymenttransfer in the database.
	Table = "order_payment_transfers"
)

// Columns holds all SQL columns for orderpaymenttransfer fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldOrderID,
	FieldCoinTypeID,
	FieldStartAmount,
	FieldPaymentTransactionID,
	FieldPaymentFinishAmount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/order-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultOrderID holds the default value on creation for the "order_id" field.
	DefaultOrderID func() uuid.UUID
	// DefaultCoinTypeID holds the default value on creation for the "coin_type_id" field.
	DefaultCoinTypeID func() uuid.UUID
	// DefaultStartAmount holds the default value on creation for the "start_amount" field.
	DefaultStartAmount decimal.Decimal
	// DefaultPaymentTransactionID holds the default value on creation for the "payment_transaction_id" field.
	DefaultPaymentTransactionID string
	// DefaultPaymentFinishAmount holds the default value on creation for the "payment_finish_amount" field.
	DefaultPaymentFinishAmount decimal.Decimal
)
